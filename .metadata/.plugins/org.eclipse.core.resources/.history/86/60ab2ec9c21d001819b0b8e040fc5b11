package com.uwb.bt2j.aligner;

import com.uwb.bt2j.util.strings.BTDnaString;
import com.uwb.bt2j.util.strings.BTString;

public class SwAligner {
	public void initRead(
			BTDnaString rdfw, // forward read sequence
			BTDnaString rdrc, // revcomp read sequence
			BTString qufw,    // forward read qualities
			BTString qurc,    // reverse read qualities
			double rdi,              // offset of first read char to align
			double rdf,              // offset of last read char to align
			Scoring sc)       // scoring scheme
	{
		int nceil = sc.nCeil.f<Integer>((double)rdfw.length());
		rdfw_    = rdfw;      // read sequence
		rdrc_    = rdrc;      // read sequence
		qufw_    = qufw;      // read qualities
		qurc_    = qurc;      // read qualities
		rdi_     = rdi;        // offset of first read char to align
		rdf_     = rdf;        // offset of last read char to align
		sc_      = sc;        // scoring scheme
		nceil_   = nceil;      // max # Ns allowed in ref portion of aln
		readSse16_ = false;    // true -> sse16 from now on for this read
		initedRead_ = true;

		if(dpLog_ != null) {
			if(!firstRead_) {
				dpLog_.write('\n');
			}
			dpLog_.write(rdfw.toZBuf() + '\t' + qufw.toZBuf());
		}
		firstRead_ = false;
	}
}
