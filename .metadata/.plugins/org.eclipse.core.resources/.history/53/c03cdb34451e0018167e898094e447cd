package com.uwb.bt2j.util.pattern;

import com.uwb.bt2j.aligner.Read;
import com.uwb.bt2j.util.EList;

import javafx.util.Pair;

public class FastaContinuousPatternSource extends CFilePatternSource{

	public FastaContinuousPatternSource(PatternParams p, EList<String> infiles) {
		super(p, infiles);
		length_ = p.sampleLen;
		freq_ = p.sampleFreq;
		eat_ = length_ - 1;
		beginning_ = true;
		bufCur_ = 0;
		cur_ = 011u;
		last_ = 011u;
		resetForNextFile();
	}

	@Override
	protected Pair<Boolean, Integer> nextBatchFromFile(PerThreadReadBuf pt, boolean batch_a, int read_idx) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected void resetForNextFile() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void nextBatch(PerThreadReadBuf pt, boolean batch_a, boolean lock) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean parse(Read ra, Read rb, long rdid) {
		// TODO Auto-generated method stub
		return false;
	}

	public void reset() {
		super.reset();
		resetForNextFile();
	}
}
