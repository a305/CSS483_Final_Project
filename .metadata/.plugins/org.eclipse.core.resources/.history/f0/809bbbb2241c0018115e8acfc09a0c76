package com.uwb.bt2j.util;

public class OutputQueue {
	public void beginReadImpl(long rdid, double threadId) {
		if(reorder_) {
			assert_geq(rdid, cur_);
			assert_eq(lines_.size(), finished_.size());
			assert_eq(lines_.size(), started_.size());
			if(rdid - cur_ >= lines_.size()) {
				// Make sure there's enough room in lines_, started_ and finished_
				size_t oldsz = lines_.size();
				lines_.resize(rdid - cur_ + 1);
				started_.resize(rdid - cur_ + 1);
				finished_.resize(rdid - cur_ + 1);
				for(size_t i = oldsz; i < lines_.size(); i++) {
					started_[i] = finished_[i] = false;
				}
			}
			started_[rdid - cur_] = true;
			finished_[rdid - cur_] = false;
	}
		
	public void beginRead(long rdid, double threadId) {
		if(reorder_ && threadSafe_) {
			ThreadSafe ts(mutex_m);
			beginReadImpl(rdid, threadId);
		} else {
			beginReadImpl(rdid, threadId);
		}
	}
}
