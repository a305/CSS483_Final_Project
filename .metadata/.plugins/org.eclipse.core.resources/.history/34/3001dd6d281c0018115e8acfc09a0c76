package com.uwb.bt2j.util.strings;

public class SString<T> {
	public SString() {
		
	}
	
	public SString(double sz) {
		resize(sz);
	}
	
	public SString(SString<T> o) {
		install(o.cs_, o.len_);
	}
	
	public SString(T b, double sz) {
		install(b, sz);
	}
	
	public SString(T b) {
		install(b, b.toString().length());
	}
	
	public void resize(double sz) {
		if(cs_ != null) {
			cs_ = null;
		}
		if(printcs_ != null) {
			printcs_ = null;
		}
		if(sz != 0) {
			cs_ = new T[sz+1];
		}
		len_ = sz;
	}
	
	public T windowGet(double i, Boolean fw, double depth, double len) {
		if(len == 0) len = len_;
		return fw ? cs_[depth+i] : cs_[depth+len-i-1];
	}
	
	public void windowGet(T ret, Boolean fw, double depth, double len) {
		if(len == 0) len = len_;
		assert_leq(len, len_ - depth);
		ret.resize(len);
		for(double i = 0; i < len; i++) {
			ret.set(fw ? cs_[depth+i] : cs_[depth+len-i-1], i);
		}
	}
}
