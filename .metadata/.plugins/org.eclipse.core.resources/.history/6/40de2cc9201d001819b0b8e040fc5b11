package com.uwb.bt2j.aligner;

public class AlignmentSetSumm {
	public AlignmentSetSumm() {
		reset();
	}
	
	public AlignmentSetSumm(Read rd1, Read rd2,
			EList<AlignmentResult> rs1,
			EList<AlignmentResult> rs2,
			EList<AlignmentResult> rs1u,
			EList<AlignmentResult> rs2u,
			Boolean exhausted1, Boolean exhausted2,
			long orefid,
			long orefoff) {
		init(rd1, rd2, rs1, rs2, rs1u, rs2u, exhausted1, exhausted2, 
			     orefid, orefoff);
	}
	
	public AlignmentSetSumm(long other1, long other2,
			Boolean paired, Boolean exhausted1,
			Boolean exhausted2, long orefid,
			long orefoff) {
		init(
				other1,
				other2,
				paired,
				exhausted1,
				exhausted2,
				orefid,
				orefoff);
	}
	
	public void reset() {
		bestUScore_.invalidate();
		bestP1Score_.invalidate();
		bestP2Score_.invalidate();
		bestCScore_.invalidate();
		bestUDist_.invalidate();
		bestP1Dist_.invalidate();
		bestP2Dist_.invalidate();
		bestCDist_.invalidate();
		bestUnchosenUScore_.invalidate();
		bestUnchosenP1Score_.invalidate();
		bestUnchosenP2Score_.invalidate();
		bestUnchosenCScore_.invalidate();
		bestUnchosenUDist_.invalidate();
		bestUnchosenP1Dist_.invalidate();
		bestUnchosenP2Dist_.invalidate();
		bestUnchosenCDist_.invalidate();
		other1_ = other2_ = 0;
		paired_ = false;
		exhausted1_ = exhausted2_ = false;
		orefid_ = -1;
		orefoff_ = -1;
	}
	
	public void init(Read rd1, Read rd2,
			EList<AlignmentResult> rs1,
			EList<AlignmentResult> rs2,
			EList<AlignmentResult> rs1u,
			EList<AlignmentResult> rs2u,
			Boolean exhausted1, Boolean exhausted2,
			long orefid,
			long orefoff) {
		
	}
	
	public void init(long other1, long other2,
			Boolean paired, Boolean exhausted1,
			Boolean exhausted2, long orefid,
			long orefoff) {
		other1_        = other1;
		other2_        = other2;
		paired_        = paired;
		exhausted1_    = exhausted1;
		exhausted2_    = exhausted2;
		orefid_        = orefid;
		orefoff_       = orefoff;
	}
	
	public Boolean empty() {
		return !AlignerResult.VALID_AL_SCORE(bestScore(true));
	}
	
	long other1()         { return other1_;        }
	long other2()         { return other2_;        }
	Boolean     paired()         { return paired_;        }
	Boolean     exhausted1()     { return exhausted1_;    }
	Boolean     exhausted2()     { return exhausted2_;    }
	long   orefid()         { return orefid_;        }
	long  orefoff()        { return orefoff_;       }
	
	public AlignmentScore bestUScore()   { return bestUScore_;  }
	public AlignmentScore bestP1Score()  { return bestP1Score_; }
	public AlignmentScore bestP2Score()  { return bestP2Score_; }
	public AlignmentScore bestCScore()   { return bestCScore_;  }
	public AlignmentScore bestUDist()    { return bestUDist_;  }
	public AlignmentScore bestP1Dist()   { return bestP1Dist_; }
	public AlignmentScore bestP2Dist()   { return bestP2Dist_; }
	public AlignmentScore bestCDist()    { return bestCDist_;  }

	public AlignmentScore bestUnchosenUScore()   { return bestUnchosenUScore_;  }
	public AlignmentScore bestUnchosenP1Score()  { return bestUnchosenP1Score_; }
	public AlignmentScore bestUnchosenP2Score()  { return bestUnchosenP2Score_; }
	public AlignmentScore bestUnchosenCScore()   { return bestUnchosenCScore_;  }
	public AlignmentScore bestUnchosenUDist()    { return bestUnchosenUDist_;  }
	public AlignmentScore bestUnchosenP1Dist()   { return bestUnchosenP1Dist_; }
	public AlignmentScore bestUnchosenP2Dist()   { return bestUnchosenP2Dist_; }
	public AlignmentScore bestUnchosenCDist()    { return bestUnchosenCDist_;  }
	
	
}
