package com.uwb.bt2j.aligner.cache;

public class QKey {
	public QKey(){
		reset();
	}
	
	public QKey(BTDnaString s) {
		init(s);
	}
	
	public Boolean init(BTDnaString s) {
		seq = 0;
		len = (double)s.length();
		if(len > 32) {
			len = 0xffffffff;
			return false; // wasn't cacheable
		} else {
			// Rightmost char of 's' goes in the least significant bitpair
			for(size_t i = 0; i < 32 && i < s.length(); i++) {
				int c = (int)s.get(i);
				assert_range(0, 4, c);
				if(c == 4) {
					len = 0xffffffff;
					return false;
				}
				seq = (seq << 2) | s.get(i);
			}
			ASSERT_ONLY(toString(tmp));
			assert(sstr_eq(tmp, s));
			assert_leq(len, 32);
			return true; // was cacheable
		}
	}
}
