package com.uwb.bt2j.util;

class EList<T> {
  public EList() {
	  cat_ = 0;
	  allocCat_ = -1;
	  list_ = null;
	  sz_ = 128;
	  cur_ = 0;
  }
  
  public EList(int cat) {
	  cat_ = cat;
	  allocCat_ = -1;
	  list_ = null;
	  sz_ = 128;
	  cur_ = 0;
  }
  
  public EList(double isz, int cat) {
	  cat_ = cat;
	  allocCat_ = -1;
	  list_ = null;
	  sz_ = isz;
	  cur_ = 0;
  }
  
  public void xfer() {
	  // Can only transfer into an empty object
	  allocCat_ = cat_;
	  list_ = o.list_;
	  sz_ = o.sz_;
	  cur_ = o.cur_;
	  o.list_ = null;
	  o.sz_ = o.cur_ = 0;
	  o.allocCat_ = -1;
  }
  
  public double size() {
	  return cur_;
  }
  
  public double capacity() {
	  return sz_;
  }
  
 /* public long totalSizeBytes() {
	  return 	16 +	cur_ * sizeof(T.);
 */ }
  
  public long totalCapacityBytes() {
  
  }
  
  public void ensure() {
  
  }
  
  public void reserveExact() {
  
  }
  
  public Boolean empty() {
  
  }
  
  public Boolean null() {
  
  }
  
  public void push_back() {
  
  }
  
  public void expand() {
  
  }
  
  public void fill() {
  
  }
  
}
